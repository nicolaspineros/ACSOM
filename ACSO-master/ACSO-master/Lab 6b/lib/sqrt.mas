sqroot,     dec         0
            load        sq_x
            /store       mult_x
            /load        sq_ten
            /store       mult_y
            /jns         mult
            /store       sq_x
            skipcond    400
            jump        sq_eqone
            jumpi       sqroot
sq_eqone,   subt        sq_ten
            skipcond    400
            jump        sq_gen
            load        sq_x
            jumpi       sqroot
sq_gen,     load        sq_result
            subt        sq_x
            skipcond    000
            jump        sq_eqwh
            jump        sq_wh
sq_eqwh,    skipcond    400
            jump        sq_endwh
sq_wh,      load        sq_i
            add         sq_one
            store       sq_i
            store       mult_x
            store       mult_y
            jns         mult
            store       sq_result
            jump        sq_gen
sq_endwh,   load        sq_i
            subt        sq_one
            jumpi       sqroot

sq_one,     dec         1
sq_i,       dec         1
sq_result,  dec         1
sq_ten,     dec         10
sq_x,       dec         0



mult,       dec         0
            clear
            store       mult_i
            store       mult_sum
            store       mult_signo

            load        mult_x           /Check signos
            skipcond    000
            jump        m_second
            load        mult_signo
            add         mult_one
            store       mult_signo
m_second,   load        mult_y
            skipcond    000
            jump        m_start
            load        mult_signo
            add         mult_one
            store       mult_signo

m_start,    load        mult_x           /Convertirlos en positivos
            store       abs_x
            jns         abs
            store       mult_x
            load        mult_y
            store       abs_x
            jns         abs
            store       mult_y

            clear
            store       mult_sum
            store       mult_i
m_while,    subt        mult_y
            skipcond    000
            jump        m_endwhile
            load        mult_sum
            add         mult_x
            store       mult_sum
            load        mult_i
            add         mult_one
            store       mult_i
            jump        m_while

m_endwhile, load        mult_signo       /Verificar el signo final de la division
            skipcond    400
            jump        m_checktwo
            jump        m_return
m_checktwo, subt        mult_two
            skipcond    400
            jump        m_negate
            jump        m_return

m_negate,   clear
            subt        mult_sum
            store       mult_sum

m_return,   load		mult_sum
            jumpi       mult

mult_x,     dec         0
mult_y,     dec         0
mult_i,     dec         0
mult_sum,   dec         0
mult_signo, dec         0
mult_one,   dec         1
mult_two,   dec         2